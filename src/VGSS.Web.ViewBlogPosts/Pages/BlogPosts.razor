@page "/"
@using VGSS.Domain
@using VGSS.Domain.Ports
@inject IViewBlogPosts _viewBlogPosts
@inject IGetUser _getUser;


@foreach (var blogPost in _viewModels!)
{
    <p>@blogPost.Title</p>
    @($"{blogPost.Views} View(s) - Posted by {blogPost.PostedBy}")
}

@code{
    private IReadOnlyCollection<BlogPostViewModel>? _viewModels;

    protected override async Task OnInitializedAsync()
    {
        var blogPosts = await _viewBlogPosts.View();
        _viewModels = await MapToViewModel(blogPosts);
    }

    private async Task<List<BlogPostViewModel>> MapToViewModel(IReadOnlyCollection<BlogPost> blogPosts)
    {
        var viewModels = new List<BlogPostViewModel>(blogPosts.Count);
        foreach(var blogPost in blogPosts)
        {
            var postedBy = await _getUser.GetByUserId(blogPost.PostedBy);
            var viewModel = new BlogPostViewModel(blogPost.Title, blogPost.Views, postedBy.Username, blogPost.PostedAt);
            viewModels.Add(viewModel);
        }
        return viewModels;
    }

    private record class BlogPostViewModel(string Title, uint Views, string PostedBy, DateTimeOffset PostedAt);
}