@page "/blogpost/{identifier}"
@using MediatR
@using VGSS.Domain.BloggerAggregate
@using VGSS.Domain.Ports
@using BlogPostQuery = VGSS.Application.ViewBlogPost.Query
@using BlogPostViewModel = VGSS.Application.ViewBlogPost.ViewModel
@inject IMediator _mediator

@{
    if (_viewModel is null)
    {
        <title>NotFound</title>
        <h1>404 NOT FOUND</h1>
    }
    else
    {
        <title>@_viewModel!.Title</title>
        <h1>@_viewModel!.Title</h1>
        <h6>Posted by @_viewModel.PostedBy.Username at @_viewModel.PostedAt.ToString("hh':'MM")</h6>
        <p>@_viewModel.Content</p>
    }
}

@code {
    [Parameter]
    public string? Identifier { get; set; }

    private BlogPostViewModel? _viewModel;

    protected override async Task OnInitializedAsync()
    {
        var blogPostId = BlogPostId.FromValue(Guid.Parse(Identifier!));
        var result = await _mediator.Send(new BlogPostQuery(blogPostId));
        _viewModel = result.Match(viewModel => viewModel, notFound => null!); //TODO - Do something on NotFound
    }
}